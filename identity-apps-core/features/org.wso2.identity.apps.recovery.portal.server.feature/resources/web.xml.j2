<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright (c) 2023-2025, WSO2 LLC. (https://www.wso2.com).
  ~
  ~ WSO2 LLC. licenses this file to you under the Apache License,
  ~ Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0" metadata-complete="true">
    <absolute-ordering />

    <!--  Custom Page configurations -->
    <!-- *************** Global configurations ********************** -->
    <context-param>
        <param-name>EnableEmailNotification</param-name>
        <param-value>true</param-value>
    </context-param>
    {% if accountrecoveryendpoint.default_business_user_store is defined %}
        <context-param>
           <param-name>DefaultBusinessUserStore</param-name>
           <param-value>{{ accountrecoveryendpoint.default_business_user_store }}</param-value>
       </context-param>
    {% endif %}
    {% if accountrecoveryendpoint.use_username_with_domain_for_self_signup_name_check is defined %}
            <context-param>
               <param-name>useUserNameWithDomainForSelfSignUpNameCheck</param-name>
               <param-value>{{ accountrecoveryendpoint.use_username_with_domain_for_self_signup_name_check }}</param-value>
           </context-param>
    {% endif %}
    {% if accountrecoveryendpoint.auto_login_cookie_domain is defined %}
        <context-param>
                <param-name>AutoLoginCookieDomain</param-name>
                <param-value>{{ accountrecoveryendpoint.auto_login_cookie_domain }}</param-value>
        </context-param>
    {% endif %}
    {% if accountrecoveryendpoint.hide_username_when_email_as_username_enabled is defined %}
        <context-param>
           <param-name>HideUsernameWhenEmailAsUsernameEnabled</param-name>
           <param-value>{{ accountrecoveryendpoint.hide_username_when_email_as_username_enabled }}</param-value>
       </context-param>
    {% endif %}
    {% if event.default_listener.validation.enable is defined %}
        <context-param>
            <param-name>isPasswordInputValidationEnabled</param-name>
            <param-value>{{ event.default_listener.validation.enable }}</param-value>
        </context-param>
    {% endif %}
    {% if downtime_banner.enabled is defined %}
        <context-param>
            <param-name>isDowntimeBannerEnabled</param-name>
            <param-value>{{ downtime_banner.enabled }}</param-value>
        </context-param>
    {% endif %}
    {% set cookie_consent = accountrecoveryendpoint.ui.is_cookie_consent_banner_enabled
        if accountrecoveryendpoint.ui.is_cookie_consent_banner_enabled is defined else ui.is_cookie_consent_banner_enabled %}
    {% if cookie_consent is defined %}
        <context-param>
            <param-name>isCookieConsentBannerEnabled</param-name>
            <param-value>{{ cookie_consent }}</param-value>
        </context-param>
    {% endif %}
    {% if identity_mgt.user_self_registration.enable_detailed_api_response is defined %}
        <context-param>
            <param-name>isSelfRegistrationDetailedApiResponseEnabled</param-name>
            <param-value>{{ identity_mgt.user_self_registration.enable_detailed_api_response }}</param-value>
        </context-param>
    {% endif %}
    <!-- *************** End of Global configurations ********************** -->
    <!--  End of Custom Page configurations -->
    <context-param>
        <param-name>ProcessAllSecurityQuestions</param-name>
        <param-value>false</param-value>
    </context-param>
    <context-param>
        <param-name>EnableCaptchaVerification</param-name>
        <param-value>false</param-value>
    </context-param>
    <context-param>
        <param-name>EnableMultiTenancy</param-name>
        <param-value>false</param-value>
    </context-param>
    <context-param>
        <param-name>EnableMultiClaimPasswordRecovery</param-name>
        <param-value>false</param-value>
    </context-param>
    <!--context-param>
        <param-name>UserPortalUrl</param-name>
        <param-value>https://localhost:9443/dashboard/index.jag</param-value>
    </context-param-->

    <!-- *************** Layout Store URL Configuration ********************** -->
    {% if webappscommon.layout_store_url is defined %}
    <context-param>
        <param-name>LayoutStoreURL</param-name>
        <param-value>{{ webappscommon.layout_store_url }}</param-value>
    </context-param>
    {% endif %}
    <!-- *************** End of Layout Store URL Configuration ********************** -->

    <listener>
        <listener-class>org.wso2.carbon.identity.mgt.endpoint.util.listener.IdentityManagementEndpointContextListener</listener-class>
    </listener>

    <filter>
        <filter-name>HttpHeaderSecurityFilter</filter-name>
        <filter-class>org.apache.catalina.filters.HttpHeaderSecurityFilter</filter-class>
        {% set ns = namespace(hstsEnabledFound=false) %}
        {% for parameter in accountrecoveryendpoint.tomcat.http_header_security_filter.parameters %}
        <init-param>
            <param-name>{{ parameter.name }}</param-name>
            <param-value>{{ parameter.value }}</param-value>
        </init-param>
        {% if parameter.name == 'hstsEnabled' %}
            {% set ns.hstsEnabledFound = true %}
        {% endif %}
        {% endfor %}
        {% if not ns.hstsEnabledFound %}
        <init-param>
            <param-name>hstsEnabled</param-name>
            <param-value>false</param-value>
        </init-param>
        {% endif %}
    </filter>

    <filter-mapping>
        <filter-name>HttpHeaderSecurityFilter</filter-name>
        <url-pattern>{{ accountrecoveryendpoint.tomcat.http_header_security_filter.url_pattern | default('*') }}</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>ContentTypeBasedCachePreventionFilter</filter-name>
        <filter-class>
           org.wso2.carbon.tomcat.ext.filter.ContentTypeBasedCachePreventionFilter
        </filter-class>
        <init-param>
           <param-name>patterns</param-name>
           <param-value>"text/html.*" ,"application/json" ,"plain/text"</param-value>
        </init-param>
        <init-param>
           <param-name>filterAction</param-name>
           <param-value>enforce</param-value>
        </init-param>
        <init-param>
           <param-name>httpHeaders</param-name>
           <param-value>
               Cache-Control: no-store, no-cache, must-revalidate, private
           </param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>ContentTypeBasedCachePreventionFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>FORWARD</dispatcher>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <filter>
        <filter-name>setCharacterEncodingFilter</filter-name>
        <filter-class>org.apache.catalina.filters.SetCharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>setCharacterEncodingFilter</filter-name>
        <url-pattern>*</url-pattern>
    </filter-mapping>

    {% set keys = [] %}
    {% set values = [] %}
    {% for servlet_item in accountrecoveryendpoint.servlet %}
        {% set _ = keys.append(servlet_item['name']) %}
        {% set _ = values.append(servlet_item) %}
    {% endfor %}
    {% set default_servlets = [
        {"name": "recoveraccountrouter.do", "jsp": "/account-recovery-router.jsp", "url": "/recoveraccountrouter.do"},
        {"name": "recoverusername.do", "jsp": "/username-recovery.jsp", "url": "/recoverusername.do"},
        {"name": "recoverusernamecomplete.do", "jsp": "/username-recovery-complete.jsp", "url": "/recoverusernamecomplete.do"},
        {"name": "recoverpassword.do", "jsp": "/password-recovery.jsp", "url": "/recoverpassword.do"},
        {"name": "processsecurityquestions.do", "jsp": "/challenge-question-process.jsp", "url": "/processsecurityquestions.do"},
        {"name": "viewsecurityquestions.do", "jsp": "/challenge-question-view.jsp", "url": "/viewsecurityquestions.do"},
        {"name": "confirmrecovery.do", "jsp": "/password-recovery-confirm.jsp", "url": "/confirmrecovery.do"},
        {"name": "passwordrecoveryotp.do", "jsp": "/password-recovery-otp.jsp", "url": "/passwordrecoveryotp.do"},
        {"name": "completepasswordreset.do", "jsp": "/password-reset-complete.jsp", "url": "/completepasswordreset.do"},
        {"name": "passwordreset.do", "jsp": "/password-reset.jsp", "url": "/passwordreset.do"},
        {"name": "register.do", "jsp": "/self-registration-username-request.jsp", "url": "/register.do"},
        {"name": "signup.do", "jsp": "/self-registration.jsp", "url": "/signup.do"},
        {"name": "processregistration.do", "jsp": "/self-registration-process.jsp", "url": "/processregistration.do"},
        {"name": "confirmregistration.do", "jsp": "/self-registration-with-verification-confirm.jsp", "url": "/confirmregistration.do"},
        {"name": "completeregistration.do", "jsp": "/self-registration-complete.jsp", "url": "/completeregistration.do"},
        {"name": "verify.do", "jsp": "/recovery.jsp", "url": "/verify.do"},
        {"name": "channelselection.do", "jsp": "/username-recovery-channel.jsp", "url": "/channelselection.do"},
        {"name": "confirmliteuserregistration.do", "jsp": "/lite-user-confirm.jsp", "url": "/confirmliteuserregistration.do"},
        {"name": "acceptinvitation.do", "jsp": "/accept-invitation.jsp", "url": "/acceptinvitation.do"}
    ] %}
     {% for servlet_item in default_servlets %}
        {% set key_name = servlet_item['name'] %}
        {% set custom_servlet = servlet_item %}
        {% if key_name in keys %}
            {% set index = keys.index(key_name) %}
            {% set custom_servlet = values[index] %}
        {% endif %}
    <servlet>
        <servlet-name>{{ custom_servlet['name'] }}</servlet-name>
        <jsp-file>{{ custom_servlet['jsp'] }}</jsp-file>
    </servlet>

    <servlet-mapping>
        <servlet-name>{{ custom_servlet['name'] }}</servlet-name>
        <url-pattern>{{ custom_servlet['url'] }}</url-pattern>
    </servlet-mapping>

    {% endfor %}
    {% set default_keys = default_servlets | map(attribute='name') | list %}
    {% for servlet_item in accountrecoveryendpoint.servlet %}
        {% if servlet_item['name'] not in default_keys %}
    <servlet>
        <servlet-name>{{ servlet_item['name'] }}</servlet-name>
        <jsp-file>{{ servlet_item['jsp'] }}</jsp-file>
    </servlet>

    <servlet-mapping>
        <servlet-name>{{ servlet_item['name'] }}</servlet-name>
        <url-pattern>{{ servlet_item['url'] }}</url-pattern>
    </servlet-mapping>

        {% endif %}
    {% endfor %}

    <!-- *************** Custom Error Page Configurations ********************** -->
    {% set all_error_pages = [] %}
    {# --- Add custom error pages first --- #}
    {% for error_page in accountrecoveryendpoint.error_pages %}
    <error-page>
        {% if error_page['exception-type'] is defined %}
            <exception-type>{{ error_page['exception-type'] }}</exception-type>
            <location>{{ error_page.location }}</location>
        {% elif error_page.code is defined %}
            <error-code>{{ error_page.code }}</error-code>
            <location>{{ error_page.location }}</location>
        {% else %}
            <location>{{ error_page.location }}</location>
        {% endif %}
    </error-page>
    {% endfor %}
    <!-- *************** End of Custom Error Page Configurations ********************** -->

    {# --- Now add defaults, only if not already handled --- #}
    {% set handled_codes = [] %}
    {% for error_page in accountrecoveryendpoint.error_pages %}
        {% if error_page.code is defined %}
            {% set _ = handled_codes.append(error_page.code) %}
        {% elif error_page['exception-type'] is defined %}
            {% set _ = handled_codes.append(error_page['exception-type']) %}
        {% else %}
            {% set _ = handled_codes.append('default') %}
        {% endif %}
    {% endfor %}

    {% set default_error_pages = [
        {"exception-type": "java.lang.Throwable", "location": "/error.jsp"},
        {"code": 400, "location": "/errors/error_400.jsp"},
        {"code": 401, "location": "/errors/error_401.jsp"},
        {"code": 403, "location": "/errors/error_403.jsp"},
        {"code": 404, "location": "/errors/error_404.jsp"},
        {"code": 405, "location": "/errors/error_405.jsp"},
        {"code": 408, "location": "/errors/error_408.jsp"},
        {"code": 410, "location": "/errors/error_410.jsp"},
        {"code": 500, "location": "/errors/error_500.jsp"},
        {"code": 502, "location": "/errors/error_502.jsp"},
        {"code": 503, "location": "/errors/error_503.jsp"},
        {"code": 504, "location": "/errors/error_504.jsp"},
        {"location": "/errors/error.jsp"}
    ] %}

    <!-- *************** Default Error Page Configurations ********************** -->
    {% for error_page in default_error_pages %}
        {% if error_page.code is defined %}
            {% set code_name = error_page.code %}
        {% elif error_page['exception-type'] is defined %}
            {% set code_name = error_page['exception-type'] %}
        {% else %}
            {% set code_name = 'default' %}
        {% endif %}

    {% if code_name not in handled_codes %}
    <error-page>
        {% if error_page['exception-type'] is defined %}
            <exception-type>{{ error_page['exception-type'] }}</exception-type>
            <location>{{ error_page.location }}</location>
        {% elif error_page.code is defined %}
            <error-code>{{ error_page.code }}</error-code>
            <location>{{ error_page.location }}</location>
        {% else %}
            <location>{{ error_page.location }}</location>
        {% endif %}
    </error-page>
    {% endif %}
    {% endfor %}
    <!-- *************** End of Default Error Page Configurations ********************** -->

    <session-config>
        <cookie-config>
            <secure>true</secure>
        </cookie-config>
    </session-config>
</web-app>
