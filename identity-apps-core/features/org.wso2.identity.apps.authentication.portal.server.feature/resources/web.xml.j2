<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright (c) 2023-2025, WSO2 LLC. (https://www.wso2.com).
  ~
  ~ WSO2 LLC. licenses this file to you under the Apache License,
  ~ Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0" metadata-complete="true">
    <absolute-ordering />

    <!--  Custom Page configurations -->
    <!-- *************** Application specific configurations ********************** -->
    <!--context-param>
        <param-name>ServiceProviderApp-/samlsso_login.do</param-name>
        <param-value>http://localhost:8080/customauthenticationendpoint/login.do</param-value>
    </context-param-->
    <!--context-param>
        <param-name>ServiceProviderApp-/oauth2_authz.do</param-name>
        <param-value>http://localhost:8080/authenticationendpoint/oauth2_authz.do</param-value>
    </context-param-->
    <!--context-param>
        <param-name>ServiceProviderApp-/oauth2_error.do</param-name>
        <param-value>http://localhost:8080/authenticationendpoint/oauth2_error.do</param-value>
    </context-param-->
    <!--context-param>
        <param-name>ServiceProviderApp-/oauth2_consent.do</param-name>
        <param-value>http://localhost:8080/authenticationendpoint/oauth2_consent.do</param-value>
    </context-param-->
    {% if downtime_banner.enabled is defined %}
        <context-param>
            <param-name>isDowntimeBannerEnabled</param-name>
            <param-value>{{ downtime_banner.enabled }}</param-value>
        </context-param>
    {% endif %}
    {% set cookie_consent = authenticationendpoint.ui.is_cookie_consent_banner_enabled
        if authenticationendpoint.ui.is_cookie_consent_banner_enabled is defined else ui.is_cookie_consent_banner_enabled %}
    {% if cookie_consent is defined %}
        <context-param>
            <param-name>isCookieConsentBannerEnabled</param-name>
            <param-value>{{ cookie_consent }}</param-value>
        </context-param>
    {% endif %}
    {% if event.default_listener.validation.enable is defined %}
        <context-param>
            <param-name>isPasswordInputValidationEnabled</param-name>
            <param-value>{{ event.default_listener.validation.enable }}</param-value>
        </context-param>
    {% endif %}
    <!-- **************** End of Application specific configurations ************************* -->

    <!-- *************** Global configurations ********************** -->
    <!--context-param>
        <param-name>/retry.do</param-name>
        <param-value>http://localhost:8080/customauthenticationendpoint/retry.do?type=retry.do</param-value>
    </context-param-->
    <!-- *************** End of Global configurations ********************** -->

    <!-- *************** Account Recovery Endpoint Context URL Configuration ********************** -->
    {% if authenticationendpoint.account_recovery_endpoint_url is defined %}
    <context-param>
       <param-name>IdentityManagementEndpointContextURL</param-name>
       <param-value>{{ authenticationendpoint.account_recovery_endpoint_url }}</param-value>
   </context-param>
   {% endif %}
    <context-param>
       <param-name>AccountRecoveryRESTEndpointURL</param-name>
       <param-value>/t/tenant-domain/api/identity/user/v1.0/</param-value>
   </context-param>
    <!--context-param>
        <param-name>EnableRecoveryEndpoint</param-name>
        <param-value>true</param-value>
    </context-param-->
    <!--context-param>
        <param-name>EnableSelfSignUpEndpoint</param-name>
        <param-value>true</param-value>
    </context-param-->

    {% if authenticationendpoint.registration_url is defined %}
    <context-param>
        <param-name>AccountRegisterEndpointURL</param-name>
        <param-value>{{ authenticationendpoint.registration_url }}</param-value>
    </context-param>
    {% endif %}

    <!-- *************** My Account URL ********************** -->
    {% if authenticationendpoint.my_account_url is defined %}
        <context-param>
            <param-name>MyAccountURL</param-name>
            <param-value>{{ authenticationendpoint.my_account_url }}</param-value>
        </context-param>
    {% endif %}

    {% if authenticationendpoint.console_url is defined %}
     <!-- *************** Console URL ********************** -->
        <context-param>
            <param-name>ConsoleURL</param-name>
            <param-value>{{ authenticationendpoint.console_url }}</param-value>
        </context-param>
    {% endif %}

    <!-- *************** End of Account Recovery Endpoint Context URL Configuration ********************** -->
    <!-- *************** Identity Server Endpoint URL Configuration ********************** -->
    {% if authenticationendpoint.identity_server_endpoint_url is defined %}
    <context-param>
        <param-name>IdentityServerEndpointContextURL</param-name>
        <param-value>{{ authenticationendpoint.identity_server_endpoint_url }}</param-value>
    </context-param>
    {% endif %}
    <!-- *************** End of Identity Server Endpoint URL Configuration ********************** -->
    <!--context-param>
        <param-name>EnableAuthenticationWithAuthenticationRESTAPI</param-name>
        <param-value>true</param-value>
    </context-param-->

    <!-- *************** Authentication REST API URL Configuration ********************** -->
    {% if authenticationendpoint.auth_rest_endpoint_url is defined %}
    <context-param>
        <param-name>AuthenticationRESTEndpointURL</param-name>
        <param-value>{{ authenticationendpoint.auth_rest_endpoint_url }}</param-value>
    </context-param>
    {% endif %}
    <!-- *************** End of Authentication REST API URL Configuration ********************** -->

    <!-- *************** ToS URL Configuration ********************** -->
    {% if authenticationendpoint.terms_of_service_url is defined %}
    <context-param>
        <param-name>TermsOfServiceURL</param-name>
        <param-value>{{ authenticationendpoint.terms_of_service_url }}</param-value>
    </context-param>
    {% endif %}
    <!-- *************** End of ToS URL Configuration ********************** -->

    <!-- *************** Privacy Policy URL Configuration ********************** -->
    {% if authenticationendpoint.privacy_policy_url is defined %}
    <context-param>
        <param-name>PrivacyPolicyURL</param-name>
        <param-value>{{ authenticationendpoint.privacy_policy_url }}</param-value>
    </context-param>
    {% endif %}
    <!-- *************** End of Privacy Policy URL Configuration ********************** -->

    <!--Display scopes in the consent page.-->
    <context-param>
        <param-name>displayScopes</param-name>
        <param-value>true</param-value>
    </context-param>

    <!-- *************** Authentication Portal Context Parameters ********************** -->
    {% if authenticationendpoint.context_params is defined %}
    {% for key, value in authenticationendpoint.context_params.items() %}
    <context-param>
        <param-name>{{ key }}</param-name>
        <param-value>{{ value }}</param-value>
    </context-param>
    {% endfor %}
    {% endif %}
    <!-- *************** End of Authentication Portal Context Parameters ********************** -->

    <!-- *************** Layout Store URL Configuration ********************** -->
    {% if webappscommon.layout_store_url is defined %}
    <context-param>
        <param-name>LayoutStoreURL</param-name>
        <param-value>{{ webappscommon.layout_store_url }}</param-value>
    </context-param>
    {% endif %}
    <!-- *************** End of Layout Store URL Configuration ********************** -->

    <filter>
        <filter-name>HttpHeaderSecurityFilter</filter-name>
        <filter-class>org.apache.catalina.filters.HttpHeaderSecurityFilter</filter-class>
        {% set ns = namespace(hstsEnabledFound=false) %}
        {% for parameter in authenticationendpoint.tomcat.http_header_security_filter.parameters %}
        <init-param>
            <param-name>{{ parameter.name }}</param-name>
            <param-value>{{ parameter.value }}</param-value>
        </init-param>
        {% if parameter.name == 'hstsEnabled' %}
            {% set ns.hstsEnabledFound = true %}
        {% endif %}
        {% endfor %}
        {% if not ns.hstsEnabledFound %}
        <init-param>
            <param-name>hstsEnabled</param-name>
            <param-value>false</param-value>
        </init-param>
        {% endif %}
    </filter>

    <filter-mapping>
        <filter-name>HttpHeaderSecurityFilter</filter-name>
        <url-pattern>{{ authenticationendpoint.tomcat.http_header_security_filter.url_pattern | default('*') }}</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>AuthenticationParameterFilter</filter-name>
        <filter-class>
            org.wso2.carbon.identity.application.authentication.endpoint.util.filter.AuthParameterFilter
        </filter-class>
    </filter>

    <filter-mapping>
        <filter-name>AuthenticationParameterFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>FORWARD</dispatcher>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <filter>
        <filter-name>AuthenticationEndpointFilter</filter-name>
        <filter-class>
            org.wso2.carbon.identity.application.authentication.endpoint.util.filter.AuthenticationEndpointFilter
        </filter-class>
    </filter>

    <filter-mapping>
        <filter-name>AuthenticationEndpointFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>FORWARD</dispatcher>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <filter>
        <filter-name>ContentTypeBasedCachePreventionFilter</filter-name>
        <filter-class>
           org.wso2.carbon.tomcat.ext.filter.ContentTypeBasedCachePreventionFilter
        </filter-class>
        <init-param>
           <param-name>patterns</param-name>
           <param-value>"text/html.*" ,"application/json" ,"plain/text"</param-value>
        </init-param>
        <init-param>
           <param-name>filterAction</param-name>
           <param-value>enforce</param-value>
        </init-param>
        <init-param>
           <param-name>httpHeaders</param-name>
           <param-value>
               Cache-Control: no-store, no-cache, must-revalidate, private
           </param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>ContentTypeBasedCachePreventionFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>FORWARD</dispatcher>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <!-- *************** Custom Filter Configurations ********************** -->
    {% for custom_filter in authenticationendpoint.filter %}
    <filter>
        <filter-name>{{custom_filter.name}}</filter-name>
        <filter-class>
           {{custom_filter.class}}
        </filter-class>
        {% for init_param in custom_filter.init_param %}
        <init-param>
           <param-name>{{init_param.name}}</param-name>
           <param-value>{{init_param.value}}</param-value>
        </init-param>
        {% endfor %}
    </filter>
    <filter-mapping>
        <filter-name>{{custom_filter.name}}</filter-name>
        <url-pattern>{{custom_filter.url_pattern}}</url-pattern>
        {% for dispatcher in custom_filter.dispatchers %}
        <dispatcher>{{dispatcher}}</dispatcher>
        {% endfor %}
    </filter-mapping>
    {% endfor %}
    <!-- *************** End of Custom Filter Configurations ********************** -->

    <!-- *************** Custom Listener Configurations ********************** -->
    {% for custom_listener in authenticationendpoint.listener %}
    <listener>
        <listener-class>
            {{custom_listener.class}}
        </listener-class>
    </listener>
    {% endfor %}
    <!-- *************** End of Custom Listener Configurations ********************** -->

    <listener>
        <listener-class>
            org.wso2.carbon.identity.application.authentication.endpoint.util.listener.AuthenticationEndpointContextListener
        </listener-class>
        <listener-class>
            org.wso2.carbon.identity.mgt.endpoint.util.listener.IdentityManagementEndpointContextListener
        </listener-class>
    </listener>

    {% set keys = [] %}
    {% set values = [] %}
    {% for servlet_item in authenticationendpoint.servlet %}
        {% set _ = keys.append(servlet_item['name']) %}
        {% set _ = values.append(servlet_item) %}
    {% endfor %}
    {% set default_servlets = [
        {"name": "create-account.do", "jsp": "/create-account.jsp", "url": "/create-account.do"},
        {"name": "retry.do", "jsp": "/retry.jsp", "url": "/retry.do"},
        {"name": "wait.do", "jsp": "/long-wait.jsp", "url": "/wait.do"},
        {"name": "resend-confirmation-captcha.do", "jsp": "/resend-confirmation-captcha.jsp", "url": "/resend-confirmation-captcha.do"},
        {"name": "idf-confirm.do", "jsp": "/identifier-logout-confirm.jsp", "url": "/idf-confirm.do"},
        {"name": "dynamic_prompt.do", "jsp": "/dynamic_prompt.jsp", "url": "/dynamic_prompt.do"},
        {"name": "handle-multiple-sessions.do", "jsp": "/handle-multiple-sessions.jsp", "url": "/handle-multiple-sessions.do"},
        {"name": "claims.do", "jsp": "/requested-claims.jsp", "url": "/claims.do"},
        {"name": "oauth2_login.do", "jsp": "/login.jsp", "url": "/oauth2_login.do"},
        {"name": "oauth2_authz.do", "jsp": "/oauth2_authz.jsp", "url": "/oauth2_authz.do"},
        {"name": "oauth2_consent.do", "jsp": "/oauth2_consent.jsp", "url": "/oauth2_consent.do"},
        {"name": "oauth2_logout_consent.do", "jsp": "/oauth2_logout_consent.jsp", "url": "/oauth2_logout_consent.do"},
        {"name": "oauth2_logout.do", "jsp": "/logout.jsp", "url": "/oauth2_logout.do"},
        {"name": "oauth2_error.do", "jsp": "/oauth2_error.jsp", "url": "/oauth2_error.do"},
        {"name": "samlsso_login.do", "jsp": "/login.jsp", "url": "/samlsso_login.do"},
        {"name": "samlsso_logout.do", "jsp": "/logout.jsp", "url": "/samlsso_logout.do"},
        {"name": "samlsso_redirect.do", "jsp": "/login.jsp", "url": "/samlsso_redirect.do"},
        {"name": "samlsso_notification.do", "jsp": "/samlsso_notification.jsp", "url": "/samlsso_notification.do"},
        {"name": "openid_login.do", "jsp": "/login.jsp", "url": "/openid_login.do"},
        {"name": "openid_profile.do", "jsp": "/openid_profile.jsp", "url": "/openid_profile.do"},
        {"name": "passivests_login.do", "jsp": "/login.jsp", "url": "/passivests_login.do"},
        {"name": "tenantlistrefresher.do", "jsp": "/tenant_refresh_endpoint.jsp", "url": "/tenantlistrefresher.do"},
        {"name": "consent.do", "jsp": "/consent.jsp", "url": "/consent.do"},
        {"name": "cookie_policy.do", "jsp": "/cookie_policy.jsp", "url": "/cookie_policy.do"},
        {"name": "privacy_policy.do", "jsp": "/privacy_policy.jsp", "url": "/privacy_policy.do"},
        {"name": "authenticate.do", "jsp": "/authenticate.jsp", "url": "/authenticate.do"},
        {"name": "error.do", "jsp": "/generic-exception-response.jsp", "url": "/error.do"},
        {"name": "device.do", "jsp": "/enter-user-code.jsp", "url": "/device.do"},
        {"name": "device_success.do", "jsp": "/device-success.jsp", "url": "/device_success.do"},
        {"name": "totp_enroll.do", "jsp": "/enableTOTP.jsp", "url": "/totp_enroll.do"},
        {"name": "totp.do", "jsp": "/totp.jsp", "url": "/totp.do"},
        {"name": "totp_error.do", "jsp": "/totpError.jsp", "url": "/totp_error.do"},
        {"name": "backup_code.do", "jsp": "/backup-code.jsp", "url": "/backup_code.do"},
        {"name": "backup_code_error.do", "jsp": "/backup-code-error.jsp", "url": "/backup_code_error.do"},
        {"name": "email_capture.do", "jsp": "/emailAddressCapture.jsp", "url": "/email_capture.do"},
        {"name": "email_otp.do", "jsp": "/emailOtp.jsp", "url": "/email_otp.do"},
        {"name": "email_otp_error.do", "jsp": "/emailOtpError.jsp", "url": "/email_otp_error.do"},
        {"name": "mobile.do", "jsp": "/mobile.jsp", "url": "/mobile.do"},
        {"name": "sms_otp.do", "jsp": "/smsOtp.jsp", "url": "/sms_otp.do"},
        {"name": "sms_otp_error.do", "jsp": "/smsOtpError.jsp", "url": "/sms_otp_error.do"},
        {"name": "push_auth.do", "jsp": "/pushAuth.jsp", "url": "/push_auth.do"},
        {"name": "push_enroll.do", "jsp": "/pushEnroll.jsp", "url": "/push_enroll.do"},
        {"name": "push_device_enroll_consent.do", "jsp": "/pushDeviceEnrollConsent.jsp", "url": "/push_device_enroll_consent.do"},
        {"name": "push_auth_error.do", "jsp": "/pushAuthError.jsp", "url": "/push_aut_error.do"},
        {"name": "duo_error.do", "jsp": "/duoError.jsp", "url": "/duo_error.do"},
        {"name": "magic_link_notification.do", "jsp": "/magic_link_notification.jsp", "url": "/magic_link_notification.do"},
        {"name": "org_name.do", "jsp": "/org_name.jsp", "url": "/org_name.do"},
        {"name": "org_discovery.do", "jsp": "/org_discovery.jsp", "url": "/org_discovery.do"},
        {"name": "select_org.do", "jsp": "/select_org.jsp", "url": "/select_org.do"},
        {"name": "register.do", "jsp": "/self-registration.jsp", "url": "/register.do"},
        {"name": "registration_error.do", "jsp": "/errors/registration_error.jsp", "url": "/registration_error.do"}
    ] %}
    {% for servlet_item in default_servlets %}
        {% set key_name = servlet_item['name'] %}
        {% set custom_servlet = servlet_item %}
        {% if key_name in keys %}
            {% set index = keys.index(key_name) %}
            {% set custom_servlet = values[index] %}
        {% endif %}
    <servlet>
        <servlet-name>{{ custom_servlet['name'] }}</servlet-name>
        <jsp-file>{{ custom_servlet['jsp'] }}</jsp-file>
    </servlet>

    <servlet-mapping>
        <servlet-name>{{ custom_servlet['name'] }}</servlet-name>
        <url-pattern>{{ custom_servlet['url'] }}</url-pattern>
    </servlet-mapping>

    {% endfor %}
    {% set default_keys = default_servlets | map(attribute='name') | list %}
    {% for servlet_item in authenticationendpoint.servlet %}
      {% if servlet_item['name'] not in default_keys %}
    <servlet>
        <servlet-name>{{ servlet_item['name'] }}</servlet-name>
        <jsp-file>{{ servlet_item['jsp'] }}</jsp-file>
    </servlet>

    <servlet-mapping>
        <servlet-name>{{ servlet_item['name'] }}</servlet-name>
        <url-pattern>{{ servlet_item['url'] }}</url-pattern>
    </servlet-mapping>

      {% endif %}
    {% endfor %}

    <!-- *************** Custom Error Page Configurations ********************** -->
    {% set all_error_pages = [] %}
    {# --- Add custom error pages first --- #}
    {% for error_page in authenticationendpoint.error_pages %}
    <error-page>
        {% if error_page['exception-type'] is defined %}
            <exception-type>{{ error_page['exception-type'] }}</exception-type>
            <location>{{ error_page.location }}</location>
        {% elif error_page.code is defined %}
            <error-code>{{ error_page.code }}</error-code>
            <location>{{ error_page.location }}</location>
        {% else %}
            <location>{{ error_page.location }}</location>
        {% endif %}
    </error-page>
    {% endfor %}
    <!-- *************** End of Custom Error Page Configurations ********************** -->

    {# --- Now add defaults, only if not already handled --- #}
    {% set handled_codes = [] %}
    {% for error_page in authenticationendpoint.error_pages %}
        {% if error_page.code is defined %}
            {% set _ = handled_codes.append(error_page.code) %}
        {% elif error_page['exception-type'] is defined %}
            {% set _ = handled_codes.append(error_page['exception-type']) %}
        {% else %}
            {% set _ = handled_codes.append('default') %}
        {% endif %}
    {% endfor %}

    {% set default_error_pages = [
        {"exception-type": "java.lang.Throwable", "location": "/error.jsp"},
        {"code": 400, "location": "/errors/error_400.jsp"},
        {"code": 401, "location": "/errors/error_401.jsp"},
        {"code": 403, "location": "/errors/error_403.jsp"},
        {"code": 404, "location": "/errors/error_404.jsp"},
        {"code": 405, "location": "/errors/error_405.jsp"},
        {"code": 408, "location": "/errors/error_408.jsp"},
        {"code": 410, "location": "/errors/error_410.jsp"},
        {"code": 500, "location": "/errors/error_500.jsp"},
        {"code": 502, "location": "/errors/error_502.jsp"},
        {"code": 503, "location": "/errors/error_503.jsp"},
        {"code": 504, "location": "/errors/error_504.jsp"},
        {"location": "/errors/error.jsp"}
    ] %}

    <!-- *************** Default Error Page Configurations ********************** -->
    {% for error_page in default_error_pages %}
        {% if error_page.code is defined %}
            {% set code_name = error_page.code %}
        {% elif error_page['exception-type'] is defined %}
            {% set code_name = error_page['exception-type'] %}
        {% else %}
            {% set code_name = 'default' %}
        {% endif %}

    {% if code_name not in handled_codes %}
    <error-page>
        {% if error_page['exception-type'] is defined %}
            <exception-type>{{ error_page['exception-type'] }}</exception-type>
            <location>{{ error_page.location }}</location>
        {% elif error_page.code is defined %}
            <error-code>{{ error_page.code }}</error-code>
            <location>{{ error_page.location }}</location>
        {% else %}
            <location>{{ error_page.location }}</location>
        {% endif %}
    </error-page>
    {% endif %}
    {% endfor %}
    <!-- *************** End of Default Error Page Configurations ********************** -->

    <session-config>
        <cookie-config>
            <secure>true</secure>
        </cookie-config>
    </session-config>

</web-app>
